#+title: Weather station web page development notebook

* D3
#+name: plot
#+begin_src js :tangle /plink:pi@piserv#60127:/var/www/html/website/apps/weather/js/plot.js
  function plot(){

  }
#+end_src

* Main
#+name: request
#+begin_src js :tangle /plink:pi@piserv#60127:/var/www/html/website/apps/weather/js/request.js
  function request(url, method, data = {}){
      let params = "/?";
      for (let key in data){
          params = params +
              key + "=" + data[key] + "&";
      }
      url = url + params;
      console.log(url);

      return new Promise(
          (resolve, reject) => {
              const h = new XMLHttpRequest();
              h.open(method, url, true);
              h.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
              h.onload = function() {
                  if (h.status >= 200 && h.status < 300){
                      resolve(
                          JSON.parse(this.responseText)
                      );
                  }
                  else {
                      reject(h.status);
                  }
              };
              h.send();
          });
  }
#+end_src


#+name: main
#+begin_src js :tangle /plink:pi@piserv#60127:/var/www/html/website/apps/weather/js/main.js
  const API_ROOT = "../php/main.php/sensors/";
  const UNIT_MAP = {
      "degree_c": '\u2103',
      "%": "%",
      "Pa": "Pa"
  };
  const SENSOR_WHITELIST = [
      "11",
      "12",
      "13"
  ];


  function getDateString(timestamp_secs){
      return (
          new Date(timestamp_secs*1000)
      ).toLocaleString();
  }


  function getLastMidnight(){
      let d = new Date();
      return (
          new Date(
              d.getFullYear(),
              d.getMonth(),
              d.getDate(),
              0, 0, 0)
      ).valueOf() / 1000;
  }


  function makeColumn(data, name){
      let label = document.createElement("th");
      label.appendChild(
          document.createTextNode(name)
      );
      document.getElementById("labels").appendChild(label);

      for (sensor of data){
          if (SENSOR_WHITELIST.includes(sensor.sensor_id)) {
              let row = document.getElementById(sensor.measurement);
              let data_cell = document.createElement("td");

              data_cell.appendChild(
                  document.createTextNode(
                      `${sensor.value} ${UNIT_MAP[sensor.unit]}`
                  )
              );

              row.appendChild(data_cell);
          }
      }
  }


  // Get latest conditions and populate
  // summary table
  request(API_ROOT+"getLatest", "GET").then(
      (data) => {
          let date = document.getElementById("timestamp");
          date.appendChild(
              document.createTextNode(
                  getDateString(data[0].timestamp)
              )
          );

          makeColumn(data, "Current");
      }
  );


  // Get today's maximum,
  // so far
  var data = {
      "t2": Date.now()/1000,
      "t1": getLastMidnight()
  };
  request(API_ROOT+"getMaxBetween", "GET", data=data).then(
      (data) => {
          _data = [];
          for (sensor of data){
              let unique = (
                  _data.length>0 &&
                      _data[_data.length-1].sensor_id
                      != sensor.sensor_id
              );

              if (unique || _data.length==0){
                  _data.push(sensor);
              }
          }

          makeColumn(_data, "Maximum");
      }
  );


  // Get today's minimum,
  // so far
  request(API_ROOT+"getMinBetween", "GET", data=data).then(
      (data) => {
          _data = [];
          for (sensor of data){
              let unique = (
                  _data.length>0 &&
                      _data[_data.length-1].sensor_id
                      != sensor.sensor_id
              );

              if (unique || _data.length==0){
                  _data.push(sensor);
              }
          }

          makeColumn(_data, "Minimum");
      }
  );
#+end_src


* Main dashboard page
#+name: dashboard
#+begin_src html :tangle /plink:pi@piserv#60127:/var/www/html/website/apps/weather/html/dashboard.html
  <!DOCTYPE html>
  <html>
      <head>
          <link rel="stylesheet" type="text/css" href="../css/dashboard.css">
          <title>Weather</title>
      </head>
      <body>
          <div id="current">
              <span id="timestamp"></span><br>
              <table id="_current">
                  <tr id="labels">
                      <th></th>
                  </tr>
                  <tr id="temperature">
                      <td>Temperature</td>
                  </tr>
                  <tr id="pressure">
                      <td>Pressure</td>
                  </tr>
                  <tr id="humidity">
                      <td>Humidity</td>
                  </tr>
              </table>
          </div>


          <script type="text/javascript" src="../js/request.js"></script>
          <script type="text/javascript" src="../js/main.js"></script>
      </body>
  </html>
#+end_src

* Stylesheets
#+dashboard_style
#+begin_src css :tangle /plink:pi@piserv#60127:/var/www/html/website/apps/weather/css/dashboard.css
  body {
      margin-left: auto;
      margin-right: auto;
      text-align: center;
  }


  #current {
      display: inline-block;
      padding: 10px;
      text-align: center;
      border: 1px solid gray;
      border-radius: 10px;
  }


  table {
      text-align: left;
      font-family: monospace;
  }

  tr {
      background: cyan;
  }


  span {
      margin-bottom: 15px;
      font-family: sans-serif;
      font-size: 18pt;
  }


  #timestamp {
      text-align: center;
      font-size: 12pt;
      background: white;
      border-bottom: 1px solid gray;
  }  
#+end_src
